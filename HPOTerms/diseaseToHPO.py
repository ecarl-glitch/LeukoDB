#!/usr/bin/python
# -*- coding: utf-8 -*-
# Input files for this script are hpoTermDef.obo (downloaded from HPO, flat file of HPO term defs),
# OMIM_NumList.csv (list of OMIM Nums generated by OMIMdisease scripts, and phenotype_annotation.tab,
# a file downloaded from the online HPO, that maps HPO terms onto OMIM disease ids (OMIM_Num)

# Output is HPOforLeukoDisease.tsv, a tab-deliminated file of OMIM_Nums matched to
# their corresponding HPO terms

# pandas used to read in OMIM_NumList and phenotype_annotation as dataframes

# PURPOSE: This file creates the tsv file that is used to create the diseaseHPO table by parsing previously created files
# files downloaded from the online Human Phenotype Ontology
import pandas as pd
from functools import reduce

outputfile = open('outputFile/HPOforLeukoDisease.tsv', 'w')
hpoTermDef = open('inputFile/hpoTermDef.obo', 'r')

HPO_annotation = pd.read_csv('inputFile/phenotype_annotation.tab', sep='\t',
                             index_col=0, low_memory=False)

OMIMNums = pd.read_csv('inputFile/OMIM_NumList.csv', low_memory=False)
OMIMList = OMIMNums['OMIM_Num'].values.tolist()

# Empty dataframe to which extracted values will be added

df = pd.DataFrame(columns=['OMIM_Num', 'diseaseName', 'HPO_ID'])

# Empty HPOList to keep track of HPO IDs to be searched for

HPOList = []

# Loop extracts values from dataframe, adds them to a temp dataframe, and then appends that to the exisiting dataframe

for (diseaseID, HPOID, diseaseName) in \
    zip(HPO_annotation['disease-identifier'], HPO_annotation['HPO-ID'],
        HPO_annotation['disease-name']):
    if diseaseID in OMIMList:

        # temp dataframe for storing values

        df2 = pd.DataFrame([[diseaseID, diseaseName, HPOID]],
                           columns=['OMIM_Num', 'diseaseName', 'HPO_ID'
                           ])
        df = df.append(df2, ignore_index=True)

        # add the HPO_ID onto the list, to be used to map HPO IDs to HPO Names

        HPOList.append(HPOID)

# Reads in the first line of the hpoTermDef file

line = hpoTermDef.readline()

# Creates an empty dataframe to store HPO ids and names together

hpoDF = pd.DataFrame(columns=['HPO_ID', 'HPO_Name'])

for line in hpoTermDef:

    # "id: " indicates that line contains an HPO ID

    if line.startswith('id: '):

        # Splits line, strips the new line char, then determines if HPO ID is in list

        line = line.split(' ')

        # Temp dataframe is created to store the HPO name and ID, then is appended to HPODF

        if line[1].strip('\n') in HPOList:
            HPOID = line[1].strip('\n')
            line = hpoTermDef.readline()
            HPOName = line.strip('name: ').strip('\n')
            hpoDF_Temp = pd.DataFrame([[HPOID, HPOName]],
                    columns=['HPO_ID', 'HPO_Name'])
            hpoDF = hpoDF.append(hpoDF_Temp, ignore_index=True)

# List of dataframes to be joined together

dfs = [df, hpoDF]

# dataframes are joined based on matching HPO ID

final_df = reduce(lambda left, right: pd.merge(left, right, on=['HPO_ID'
                  ], how='outer'), dfs)

# Sorts Values by OMIM Num (Intially sorted by HPO ID) and then writes dataframe to output file

final_df.sort_values(by=['OMIM_Num'], inplace=True)
final_df.to_csv('outputFile/HPOforLeukoDisease.tsv', sep='\t')

outputfile.close()
hpoTermDef.close()
