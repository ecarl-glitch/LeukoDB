## Background
Leukodystrophies are a class of rare genetic disorders that cause the degradation of the white matter in the brain. The destruction of the white matter occurs because of defects in myelin, the fatty covering surrounding nerves in the brain [1]. These diseases are progressive, with symptoms getting worse with time. There are no treatments, only interventions to slow progression and manage symptoms.
Children born with leukodystrophies appear healthy at birth, but begin to show symptoms at a few months to a few years, depending on the type of leukodystrophy. Though some leukodystrophies don’t affect the individual until later in life, typically adolescents or young adulthood. These leukodystrophies are slower progressing [1]. 
Currently, there are limited treatments avaliable for leukodystrophy. The only promising treatment is a spinal cord transplant, which can delay or prevent the onset of sympotms. However, cruelly, a spinal cord transplant is only effective if performed prior to the onset of symptoms [1]. This means that treatment is typically limited to the affected younger sibilings of a diagnosed patient.
Recently advocacy groups have been pushing for widespread screening. While incidences of leukodystrophies are relatively low, about 1 in 7,000 live births, an early diagnosis provides the best opportunity for treatment [1]. If screenings do become more widespread and as research continues, a genetic database of leukodystrophies could be a useful tool for researchers. While data exists in other rare disease databases for leukodystrophies and there are a handful of patient registries, a dedicated leukodystrophy database is not currently publicly available. 
Therefore, this project seeks to create a repositiory of gene and phenotype data on identified leukodystrophies. The purpose of this database is to provide a resource to clinicians and researchers investigating or treating leukodystrophy. While the data in this database is currently limited, future implementations could also add disease-gene and gene-phenotype associations, as well as expanded query functionality. 
In current literature,  there has been limited computational research. Most papers currently on the topic feature genetics studies conducted during clinical trials. These studies have increased understanding of the molecular and genetic basis of leukodystrophies, such as one conducted in Iran, that performed a genetic analysis of 152 children and infants who were suspected of having leukodystrophy [2]. However, by providing a resource for computation research, novel revelations may come from previously collected data.
                
                    
## Research Questions
The web page allows for four different types of queries to be performed. For example, say I was researching the gene ADAR. By searching for the term “ADAR” and selecting that it is an approved gene symbol, I would be able to find the related OMIM Gene ID, as well as the disease/phenotype associated with the condition and the way it is inherited. 
Or, say I was researching the conditions that have a particular HPO term (ontology for human phenotypes) affiliated with their clinical presentation, I could search the HPO ID for that term and receive a list of the leukodystrophies that it is associated with. 
For a more in-depth research query, I could start by researching an OMIM leukodystrophy; which would give me the gene information. I could then look up particular HPO terms and see which other associated diseases have the same gene. 
As an example, Aicardi-Goutieres syndrome 6 (OMIM ID: 615010) returns that is associated with ADAR (Gene OMIM ID: 146920) when I search for the OMIM ID. Then say I research the HPO term Microcephaly HP:0000252, a symptom affilated with the condition. By querying it, I find that no other diseases affilated with the gene ADAR are also affilated with the HPO term for Microcephaly.
        
     
## Challenges/Discussion
In this project, I pulled data from three resources; OMIM, DisGeneNet, and HPO. From the data, I was able to create a repository of disease, gene, and phenotype information for the sixity-four leukodystrophies present in OMIM. I was also able to pull gene-variant associations from DisGeneNet for some of the genes affiliated with leukodystrophies. One interesting thing that I noticed as I was parsing and cleaning the data was that most of the variants pulled from the gene-variant associations were missense mutations. Only two variants were not missenese mutations, and they were both the addition of stop codon. While ideally, my website would provide a robust tool for researchers examining the genetics and phenotype basis of leukodystrophies, as well as genetic variants, currently, the functionality of my query tool is limited. It currently allows for four queries to be performed; searching for information on an HPO ID, an OMIM disease or gene ID, and the approved gene symbol. For each search, information about the affilated gene or disease will be displayed. Searching for an HPO ID brings up a list of leukodystrophies where that HPO term is part of their clinical presentation or phenotype. 
While I generally enjoyed working on this project, I had several significant challenges that I had to overcome. For one, I had to switch the resource I was using for HPO terms. Initially, I had planned on using OrphaNet to obtain the phenotype (coded as HPO terms) for each leukodystrophy that I was including in my database. While it initially seemed that it would work well for the scope of my project, I learned that it was very limited, containing only 22 of the 64 leukodystrophies in my database. On top of that, not all of the records were complete. So I had to switch to using the HPO, which has a query tool for finding the HPO terms affiliated with certain diseases or genes. 
Another challenge was implementing the API for DisGeneNet. While it was fairly straightforward and had an example Python script showing how to use the database, the data I received from the API was poorly formatted. Failed requests were returned as a single error message string in a dictionary, while successful requests were returned as lists. As this was not stated anywhere on their API information page, it took a while to troubleshoot this issue. Eventually, I figured out the issue by returning the data type of each result.
I challenged myself by both implementing DisGeneNet’s API, and also learning to use Python’s pandas package. While I found it extremely useful for parsing and processing my tables, it took some time to learn how to work within the constraints of dataframes. Some scripts do not use pandas’ dataframes, as I started using it part of the way through the project. 

## References
[1] J. L. Bonkowsky, S. Keller, J. K. Capal, T. Lotze, R. A. Shellhaas, D. K. Urion, E. Chen, T. L. Trotter, S. A. Berry, L. W. Burke, T. A. Geleske, R. Hamid, R. J. Hopkin, W. J. Introne, M. J. Lyons, A. E. Scheuerle, and J. M. Stoler, “Leukodystrophies in children: Diagnosis, care, and treatment,” Pediatrics, vol. 148, no. 3, 2021.

[2] N. Mahdieh, M. Soveizi, A. R. Tavasoli, A. Rabbani, M. R. Ashrafi, A. Kohlschütter, and B. Rabbani, “Genetic testing of leukodystrophies unraveling extensive heterogeneity in a large cohort and report of five common diseases and 38 novel variants,” Scientific Reports, vol. 11, no. 1, 2021.
